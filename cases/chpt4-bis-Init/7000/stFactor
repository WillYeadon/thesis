/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "7000";
    object      stFactor;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
4800
(
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0.999985
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0.012741
0.00526048
0.00531089
0.00550112
0.00563136
0.005742
0.00581541
0.00585077
0.00587041
0.00588665
0.00588711
0.00588101
0.00588323
0.00591172
0.0059144
0.00589477
0.00586112
0.00586969
0.00588182
0.00590481
0.00591282
0.00589858
0.00589627
0.00587261
0.00582336
0.0057788
0.00576865
0.00570097
0.00572034
0.00568104
0.00565991
0.00561903
0.00559611
0.00558317
0.00558893
0.00562515
0.00563473
0.00561541
0.00559485
0.00558062
0.00557962
0.00557083
0.00556786
0.00557206
0.00558392
0.00558561
0.00558715
0.00559622
0.00560874
0.00561508
0.00562575
0.00563337
0.00565289
0.00567423
0.00569964
0.00573381
0.00577247
0.00582129
0.00588532
0.00594236
0.00597787
0.00599682
0.00600864
0.00601284
0.00601075
0.00600932
0.00601306
0.00601364
0.00600619
0.00599438
0.00598428
0.00597579
0.00597352
0.00596356
0.00595443
0.00595096
0.00594814
0.00594647
0.00595066
0.00589742
0.0046046
0.00382318
0.0033606
0.00306009
0.00284789
0.00269305
0.00257191
0.00245632
0.00234634
0.00229256
0.00227607
0.00227592
0.00228132
0.00228566
0.0022894
0.00229226
0.00229346
0.00229376
0.00229435
0.00229533
0.0022961
0.00229621
0.00229459
0.00228703
0.00224709
0.00202423
0.0015261
0.000167021
0.00016704
0.00016704
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167038
0.00176398
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167042
0.000167041
0.000167042
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167044
0.000167042
0.000167042
0.000167043
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
)
;

boundaryField
{
    hot
    {
        type            calculated;
        value           uniform 1;
    }
    hotTop
    {
        type            calculated;
        value           nonuniform List<scalar> 8(0.012741 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045);
    }
    cold
    {
        type            calculated;
        value           nonuniform List<scalar> 
32
(
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
)
;
    }
    coldTop
    {
        type            calculated;
        value           nonuniform List<scalar> 8(0.00176403 0.000166827 0.000167033 0.000167043 0.000167039 0.000167045 0.000167043 0.000167045);
    }
    top
    {
        type            calculated;
        value           nonuniform List<scalar> 
120
(
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
)
;
    }
    btm
    {
        type            calculated;
        value           uniform 1;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
