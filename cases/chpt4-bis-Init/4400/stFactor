/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "4400";
    object      stFactor;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
4800
(
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0.00968247
0.00184846
0.00171184
0.00173839
0.00178755
0.00179146
0.001807
0.00181185
0.00178101
0.00184627
0.00185035
0.0018253
0.00182861
0.00182217
0.00181952
0.00182165
0.00182117
0.00182217
0.00182284
0.00182294
0.00182211
0.00182713
0.0018327
0.0018344
0.00183872
0.00184092
0.00186308
0.00186401
0.00187356
0.00184916
0.00185955
0.00185512
0.00186602
0.00186087
0.00186793
0.00184259
0.0018211
0.00182096
0.00181837
0.00180977
0.00180702
0.00181301
0.00181029
0.00181139
0.00181267
0.00181424
0.00181882
0.00181085
0.00182086
0.00175735
0.00179501
0.00181668
0.00180378
0.001808
0.00181257
0.00181612
0.00182163
0.00182884
0.00185998
0.00179842
0.00182819
0.00182741
0.00183049
0.00183303
0.00183325
0.00183714
0.00182767
0.00183991
0.0018303
0.00183597
0.00184026
0.00181797
0.00185209
0.00182227
0.00179861
0.00183098
0.00184631
0.00180913
0.00186299
0.00175448
0.000167031
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167042
0.000167038
0.000167028
0.000167008
0.00174941
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167043
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167044
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
)
;

boundaryField
{
    hot
    {
        type            calculated;
        value           uniform 1;
    }
    hotTop
    {
        type            calculated;
        value           nonuniform List<scalar> 8(0.00968248 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045);
    }
    cold
    {
        type            calculated;
        value           nonuniform List<scalar> 
32
(
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
)
;
    }
    coldTop
    {
        type            calculated;
        value           nonuniform List<scalar> 8(0.00174948 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045 0.000167045);
    }
    top
    {
        type            calculated;
        value           nonuniform List<scalar> 
120
(
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
0.000167045
)
;
    }
    btm
    {
        type            calculated;
        value           uniform 1;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
