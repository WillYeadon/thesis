  /*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    // want 0 - 4 mm
    (-7.15 -0.01 0)
    (14.3 -0.01 0) // 7.1377 * 2
    (14.3 0.01 0)
    (-7.15 0.01 0)
    (-7.15 -0.01 0.3) // (2.275 - 2*0.16) / 2
    (14.3 -0.01 0.3)
    (14.3 0.01 0.3)
    (-7.15 0.01 0.3)
    (-7.15 -0.01 0.55) // 0.9775 + 0.16
    (14.3 -0.01 0.55)
    (14.3 0.01 0.55)
    (-7.15 0.01 0.55)
/*
    (0 -0.05 0.9) 
    (4 -0.05 0.9)
    (4 0.05 0.9)
    (0 0.05 0.9)
*/
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (200 1 15) simpleGrading (1 1 1)
    hex (4 5 6 7 8 9 10 11) (200 1 10) simpleGrading (1 1 1)
//    hex (8 9 10 11 12 13 14 15) (60 1 5) simpleGrading (1 1 2)
);

edges
(
);

boundary
(
	frontAndBack
	{
		type empty;
		faces
		(
        (1 5 4 0)
        (3 7 6 2)
        (5 9 8 4)
        (6 10 11 7)
//        (9 13 12 8)		
//        (11 15 14 10)        
		);
	}
    top
    {
        type wall;
        faces
        (
          (8 9 10 11)
//        (12 13 14 15)   
        );
    }
    btm
    {
        type wall;
        faces
        (
        (0 3 2 1)
        );
    }
    side1Andside2Andside3
    {
        type wall;
//        type symmetry;
        faces
        (
        (4 8 11 7)   
        (6 10 9 5)
/*       
        (0 4 7 3)         
        (2 6 5 1)
        (8 12 15 11)     
        (10 14 13 9)
*/
        );
    }
    btm_side1Andside2Andside3
    {
        type wall;
//        type symmetry;
        faces
        (
        (0 4 7 3)         
        (2 6 5 1)
        );
    }
    /*
    top_side1Andside2Andside3
    {
        type wall;
        faces
        (
        (8 12 15 11)     
        (10 14 13 9)
        );
    }
    */
);

mergePatchPairs
(
);


// ************************************************************************* //
